(function() {var implementors = {};
implementors["imxrt_async_hal"] = [{"text":"impl&lt;E&gt; Freeze for Sender&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for Receiver&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for Input","synthetic":true,"types":[]},{"text":"impl Freeze for Output","synthetic":true,"types":[]},{"text":"impl&lt;P, D&gt; Freeze for GPIO&lt;P, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Trigger","synthetic":true,"types":[]},{"text":"impl Freeze for GPT","synthetic":true,"types":[]},{"text":"impl Freeze for ClockSpeed","synthetic":true,"types":[]},{"text":"impl&lt;SCL, SDA&gt; Freeze for I2C&lt;SCL, SDA&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;SCL: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;SDA: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;I, M&gt; Freeze for Instance&lt;I, M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for PIT","synthetic":true,"types":[]},{"text":"impl&lt;SDO, SDI, SCK, PCS0&gt; Freeze for Pins&lt;SDO, SDI, SCK, PCS0&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;PCS0: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;SCK: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;SDI: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;SDO: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Pins&gt; Freeze for SPI&lt;Pins&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Pins: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;TX, RX&gt; Freeze for UART&lt;TX, RX&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;RX: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;TX: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()