var searchIndex = JSON.parse('{\
"imxrt_async_hal":{"doc":"Embedded, async Rust for i.MX RT processors","i":[[0,"dma","imxrt_async_hal","Direct Memory Access (DMA) for async I/O",null,null],[5,"full_duplex","imxrt_async_hal::dma","Perform a full-suplex DMA transfer using two DMA channels…",null,[[["channel",3]],["fullduplex",3]]],[5,"receive","","Use a DMA channel to receive a `buffer` of elements from…",null,[[["channel",3]],["rx",3]]],[5,"transfer","","Use a DMA channel to send a `buffer` of data to the…",null,[[["channel",3]],["tx",3]]],[3,"FullDuplex","","A full-duplex DMA transfer from a single buffer",null,null],[3,"Rx","","A DMA transfer that receives data from hardware",null,null],[3,"Tx","","A DMA transfer that sends data to hardware",null,null],[8,"Element","","Describes a transferrable DMA element; basically, an…",null,null],[18,"DATA_TRANSFER_ID","","An identifier describing the data transfer size",0,null],[4,"BandwidthControl","","Throttles the amount of bus bandwidth consumed by the eDMA",null,null],[13,"Stall4Cycles","","DMA engine stalls for 4 cycles after each R/W.",1,null],[13,"Stall8Cycles","","DMA engine stalls for 8 cycles after each R/W.",1,null],[3,"Channel","","A DMA channel",null,null],[3,"Error","","A wrapper around a DMA error status value",null,null],[5,"channels","","Initialize and acquire the DMA channels",null,[[["instance",3],["instance",3]]]],[17,"CHANNEL_COUNT","","",null,null],[0,"gpio","imxrt_async_hal","GPIOs",null,null],[4,"Input","imxrt_async_hal::gpio","Indicates that a pin is configured as an input",null,null],[4,"Output","","Indicates that a pin is configured as an output",null,null],[3,"GPIO","","A wrapper around an i.MX RT processor pad, supporting…",null,null],[4,"Trigger","","Input interrupt triggers",null,null],[13,"Low","","Interrupt when GPIO is low",2,null],[13,"High","","Interrupt when GPIO is high",2,null],[13,"RisingEdge","","Interrupt after GPIO rising edge",2,null],[13,"FallingEdge","","Interrupt after GPIO falling edge",2,null],[13,"EitherEdge","","Interrupt after either a rising or falling edge",2,null],[3,"Interrupt","","A future that awaits the input trigger selection",null,null],[11,"new","","Create a GPIO from a pad that supports a GPIO configuration",3,[[]]],[11,"output","","Transition the GPIO from an input to an output",3,[[],[["gpio",3],["output",4]]]],[11,"is_set","","Returns `true` if this input pin is high",3,[[]]],[11,"wait_for","","Sets the trigger for the input GPIO, and await for the…",3,[[["trigger",4]],["interrupt",3]]],[11,"input","","Transition the pin from an output to an input",3,[[],[["gpio",3],["input",4]]]],[11,"set","","Drive the GPIO high",3,[[]]],[11,"clear","","Drive the GPIO low",3,[[]]],[11,"is_set","","Returns `true` if the pin is driving high",3,[[]]],[11,"toggle","","Alternate the state of the pin",3,[[]]],[0,"gpt","imxrt_async_hal","General purpose timers (GPT)",null,null],[3,"GPT","imxrt_async_hal::gpt","The GPT timer",null,null],[3,"Delay","","A future that waits for the GPT timer to elapse",null,null],[11,"new","","Create a new `GPT` from a RAL GPT instance",4,[[["instance",3]]]],[11,"delay","","Wait for `ticks` clock counts to elapse",4,[[],["delay",3]]],[0,"i2c","imxrt_async_hal","I2C driver, types, and futures",null,null],[4,"ClockSpeed","imxrt_async_hal::i2c","I2C clock speed",null,null],[13,"KHz100","","100 KHz clock speed",5,null],[13,"KHz400","","400 KHz clock speed",5,null],[3,"Read","","An I2C read future",null,null],[3,"Write","","An I2C write future",null,null],[3,"WriteRead","","An I2C write-read future",null,null],[3,"I2C","","The I2C driver instance",null,null],[4,"Error","","Errors propagated from an [`I2C`] device",null,null],[13,"ClockSpeed","","There was an issue when setting the clock speed",6,null],[13,"LostBusArbitration","","Master has lost arbitration",6,null],[13,"PinLowTimeout","","SCL and / or SDA went low for too long",6,null],[13,"UnexpectedNACK","","Detected a NACK when sending an address or data",6,null],[13,"FIFO","","Sending or receiving data without a START condition",6,null],[13,"RequestTooMuchData","","Requesting too much data in a receive",6,null],[13,"BusyIsBusy","","Busy is busy",6,null],[4,"State","","I2C polling state",null,null],[13,"StartWrite","","",7,null],[13,"Send","","",7,null],[13,"StartRead","","",7,null],[13,"EndOfPacket","","",7,null],[13,"ReceiveLength","","",7,null],[13,"Receive","","",7,null],[13,"StopSetup","","",7,null],[13,"Stop","","",7,null],[11,"new","","Create an I2C driver from an I2C instance and a pair of…",8,[[["i2c",6]]]],[11,"release","","Release the I2C peripheral components",8,[[]]],[11,"set_clock_speed","","Set the I2C clock speed",8,[[["clockspeed",4]],[["error",4],["result",4]]]],[11,"write_read","","Perform a write-read to an I2C device identified by…",8,[[],["writeread",3]]],[11,"write","","Perform an I2C write, sending `buffer` to the I2C device…",8,[[],["write",3]]],[11,"read","","Request a `buffer` of data from an I2C device identified…",8,[[],["read",3]]],[0,"instance","imxrt_async_hal","Strongly-typed peripherals",null,null],[5,"uart","imxrt_async_hal::instance","Specify a `UART` instance",null,[[["instance",3]],[["uart",6],["option",4]]]],[5,"spi","","Specify a `SPI` instance",null,[[["instance",3]],[["spi",6],["option",4]]]],[5,"i2c","","Specify an `I2C` instance",null,[[["instance",3]],[["option",4],["i2c",6]]]],[3,"Instance","","A strongly-typed RAL instance",null,null],[6,"UART","","Alias for an `Instance` around a `ral::lpuart::Instance`",null,null],[6,"SPI","","Alias for an `Instance` around a `ral::lpspi::Instance`",null,null],[6,"I2C","","Alias for an `Instance` around a `ral::lpi2c::Instance`",null,null],[8,"Inst","","A trait implemented on RAL instances",null,null],[10,"inst","","Return the peripheral instance as a run-time value",9,[[]]],[11,"release","","Returns the wrapped RAL instance",10,[[]]],[0,"pit","imxrt_async_hal","Periodic interrupt timer (PIT) driver and futures",null,null],[3,"PIT","imxrt_async_hal::pit","Periodic interrupt timer (PIT)",null,null],[3,"Delay","","A future that yields once the PIT timer elapses",null,null],[11,"new","","Acquire four PIT channels from the RAL\'s PIT instance",11,[[["instance",3]]]],[11,"delay","","Wait for the counts to elapse",11,[[],["delay",3]]],[0,"iomuxc","imxrt_async_hal","Pad multiplexing and configuration",null,null],[5,"configure","imxrt_async_hal::iomuxc","Applies the configuration `config` for the supplied pad",null,[[["config",3]]]],[3,"Config","","A configuration capable of compile-time, `const`…",null,null],[4,"DriveStrength","","Drive strength",null,null],[13,"Disabled","","",12,null],[13,"R0","","150 Ohm @ 3.3V, 260 Ohm@1.8V",12,null],[13,"R0_2","","R0 / 2",12,null],[13,"R0_3","","R0 / 3",12,null],[13,"R0_4","","R0 / 4",12,null],[13,"R0_5","","",12,null],[13,"R0_6","","",12,null],[13,"R0_7","","",12,null],[4,"Hysteresis","","The hysteresis (HYS) bit controls whether a pin acts as a…",null,null],[13,"Enabled","","",13,null],[13,"Disabled","","",13,null],[4,"OpenDrain","","Open Drain Enable Field",null,null],[13,"Enabled","","",14,null],[13,"Disabled","","",14,null],[4,"PullKeep","","Enable or disable the pull / keeper functionality",null,null],[13,"Enabled","","",15,null],[13,"Disabled","","",15,null],[4,"PullKeepSelect","","Control signal to enable internal pull-up/down resistors…",null,null],[13,"Keeper","","Keep the previous output value when the output driver is…",16,null],[13,"Pull","","Pull-up or pull-down (determined by `PullUpDown` flags).",16,null],[4,"PullUpDown","","Controls signals to select pull-up or pull-down internal…",null,null],[13,"Pulldown100k","","100KOhm pull Down",17,null],[13,"Pullup47k","","47KOhm pull up",17,null],[13,"Pullup100k","","100KOhm pull up",17,null],[13,"Pullup22k","","22KOhm pull up",17,null],[4,"SlewRate","","Slew Rate",null,null],[13,"Fast","","",18,null],[13,"Slow","","",18,null],[4,"Speed","","Sets electrical characteristics of a pin in a given…",null,null],[13,"Low","","",19,null],[13,"Medium","","",19,null],[13,"Fast","","",19,null],[13,"Max","","",19,null],[0,"consts","","Type-level constants and traits",null,null],[6,"U0","imxrt_async_hal::iomuxc::consts","",null,null],[6,"U1","","",null,null],[6,"U10","","",null,null],[6,"U11","","",null,null],[6,"U12","","",null,null],[6,"U13","","",null,null],[6,"U14","","",null,null],[6,"U15","","",null,null],[6,"U16","","",null,null],[6,"U17","","",null,null],[6,"U18","","",null,null],[6,"U19","","",null,null],[6,"U2","","",null,null],[6,"U20","","",null,null],[6,"U21","","",null,null],[6,"U22","","",null,null],[6,"U23","","",null,null],[6,"U24","","",null,null],[6,"U25","","",null,null],[6,"U26","","",null,null],[6,"U27","","",null,null],[6,"U28","","",null,null],[6,"U29","","",null,null],[6,"U3","","",null,null],[6,"U30","","",null,null],[6,"U31","","",null,null],[6,"U32","","",null,null],[6,"U33","","",null,null],[6,"U34","","",null,null],[6,"U35","","",null,null],[6,"U36","","",null,null],[6,"U37","","",null,null],[6,"U38","","",null,null],[6,"U39","","",null,null],[6,"U4","","",null,null],[6,"U40","","",null,null],[6,"U41","","",null,null],[6,"U5","","",null,null],[6,"U6","","",null,null],[6,"U7","","",null,null],[6,"U8","","",null,null],[6,"U9","","",null,null],[8,"Unsigned","","The marker trait for compile time unsigned integers.",null,null],[18,"U8","","",20,null],[18,"U16","","",20,null],[18,"U32","","",20,null],[18,"U64","","",20,null],[18,"USIZE","","",20,null],[18,"I8","","",20,null],[18,"I16","","",20,null],[18,"I32","","",20,null],[18,"I64","","",20,null],[18,"ISIZE","","",20,null],[10,"to_u8","","",20,[[]]],[10,"to_u16","","",20,[[]]],[10,"to_u32","","",20,[[]]],[10,"to_u64","","",20,[[]]],[10,"to_usize","","",20,[[]]],[10,"to_i8","","",20,[[]]],[10,"to_i16","","",20,[[]]],[10,"to_i32","","",20,[[]]],[10,"to_i64","","",20,[[]]],[10,"to_isize","","",20,[[]]],[0,"gpio","imxrt_async_hal::iomuxc","GPIO pad configuration",null,null],[8,"Pin","imxrt_async_hal::iomuxc::gpio","A GPIO pin",null,null],[18,"ALT","","The alternate value for this pad",21,null],[16,"Module","","The GPIO module; `U5` for `GPIO5`",21,null],[16,"Offset","","The offset; `U13` for `GPIO5_IO13`",21,null],[5,"prepare","","Prepare a pad to be used as a GPIO pin",null,[[]]],[0,"i2c","imxrt_async_hal::iomuxc","I2C pad configuration",null,null],[4,"SCL","imxrt_async_hal::iomuxc::i2c","Tag that indicates the SCL signal",null,null],[4,"SDA","","Tag that indicates the SDA signal",null,null],[8,"Signal","","An I2C signal; one of `SCL` or `SDA`",null,null],[8,"Pin","","An I2C pin",null,null],[18,"ALT","","Alternate value for this pin",22,null],[18,"DAISY","","Daisy register",22,null],[16,"Signal","","I2C Signal",22,null],[16,"Module","","I2C module; `U2` for `I2C2`",22,null],[5,"prepare","","Prepare an I2C pin",null,[[]]],[0,"pwm","imxrt_async_hal::iomuxc","PWM pad configuration",null,null],[8,"Output","imxrt_async_hal::iomuxc::pwm","A PWM output identified; one of `A` or `B`",null,null],[4,"A","","PWM output A",null,null],[4,"B","","PWM output B",null,null],[8,"Pin","","A PWM pin",null,null],[18,"ALT","","The alternate mode for the PWM pin",23,null],[16,"Output","","The output identifier",23,null],[16,"Module","","The PWM module; `U2` is `PWM2`",23,null],[16,"Submodule","","The PWM submodule; `U3` for `PWM2_SM3`",23,null],[5,"prepare","","Prepare a PWM pin",null,[[]]],[0,"spi","imxrt_async_hal::iomuxc","SPI pad configurations",null,null],[8,"Signal","imxrt_async_hal::iomuxc::spi","A SPI signal",null,null],[4,"SCK","","A tag that indicates a SPI clock pad",null,null],[4,"SDO","","A tag that indicates a SPI data out pad",null,null],[4,"SDI","","A tag that indicates a SPI data in pad",null,null],[4,"PCS0","","A tag that indicates a SPI chip select pad",null,null],[8,"Pin","","A SPI pin",null,null],[18,"ALT","","Alternate value for this pin",24,null],[18,"DAISY","","Daisy register",24,null],[16,"Signal","","SPI signal",24,null],[16,"Module","","SPI module; `U3` for `SPI3`",24,null],[5,"prepare","","Prepare a SPI pin",null,[[]]],[0,"uart","imxrt_async_hal::iomuxc","UART pad configuration",null,null],[4,"TX","imxrt_async_hal::iomuxc::uart","Type tag for the transfer pin",null,null],[4,"RX","","Type tag for the receive pin",null,null],[8,"Direction","","A pin direction, either transfer or receive",null,null],[8,"Pin","","A UART pin",null,null],[18,"ALT","","The alternate value for the UART pin",25,null],[18,"DAISY","","The daisy register which will select the pad",25,null],[16,"Direction","","Pin direction",25,null],[16,"Module","","UART module; `U3` for `UART3`",25,null],[5,"prepare","","Prepare a UART pin",null,[[]]],[3,"Daisy","imxrt_async_hal::iomuxc","A daisy selection",null,null],[3,"ErasedPad","","A pad that has its type erased",null,null],[3,"Pad","","An i.MXT RT pad",null,null],[3,"WrongPadError","","An error that indicates the conversion from an `ErasedPad`…",null,null],[12,"0","","",26,null],[5,"new","","Turn the `IOMUXC` instance into pads",null,[[["instance",3]],["pads",3]]],[0,"pads","","",null,null],[0,"ad_b0","imxrt_async_hal::iomuxc::pads","Pads with the prefix \'AD_B0\'",null,null],[6,"AD_B0_00","imxrt_async_hal::iomuxc::pads::ad_b0","",null,null],[6,"AD_B0_01","","",null,null],[6,"AD_B0_02","","",null,null],[6,"AD_B0_03","","",null,null],[6,"AD_B0_04","","",null,null],[6,"AD_B0_05","","",null,null],[6,"AD_B0_06","","",null,null],[6,"AD_B0_07","","",null,null],[6,"AD_B0_08","","",null,null],[6,"AD_B0_09","","",null,null],[6,"AD_B0_10","","",null,null],[6,"AD_B0_11","","",null,null],[6,"AD_B0_12","","",null,null],[6,"AD_B0_13","","",null,null],[6,"AD_B0_14","","",null,null],[6,"AD_B0_15","","",null,null],[3,"Pads","","Pads with the prefix \'AD_B0\'",null,null],[12,"p00","","",27,null],[12,"p01","","",27,null],[12,"p02","","",27,null],[12,"p03","","",27,null],[12,"p04","","",27,null],[12,"p05","","",27,null],[12,"p06","","",27,null],[12,"p07","","",27,null],[12,"p08","","",27,null],[12,"p09","","",27,null],[12,"p10","","",27,null],[12,"p11","","",27,null],[12,"p12","","",27,null],[12,"p13","","",27,null],[12,"p14","","",27,null],[12,"p15","","",27,null],[6,"ErasedPads","","Erased pads with the prefix \'AD_B0\'",null,null],[0,"ad_b1","imxrt_async_hal::iomuxc::pads","Pads with the prefix \'AD_B1\'",null,null],[6,"AD_B1_00","imxrt_async_hal::iomuxc::pads::ad_b1","",null,null],[6,"AD_B1_01","","",null,null],[6,"AD_B1_02","","",null,null],[6,"AD_B1_03","","",null,null],[6,"AD_B1_04","","",null,null],[6,"AD_B1_05","","",null,null],[6,"AD_B1_06","","",null,null],[6,"AD_B1_07","","",null,null],[6,"AD_B1_08","","",null,null],[6,"AD_B1_09","","",null,null],[6,"AD_B1_10","","",null,null],[6,"AD_B1_11","","",null,null],[6,"AD_B1_12","","",null,null],[6,"AD_B1_13","","",null,null],[6,"AD_B1_14","","",null,null],[6,"AD_B1_15","","",null,null],[3,"Pads","","Pads with the prefix \'AD_B1\'",null,null],[12,"p00","","",28,null],[12,"p01","","",28,null],[12,"p02","","",28,null],[12,"p03","","",28,null],[12,"p04","","",28,null],[12,"p05","","",28,null],[12,"p06","","",28,null],[12,"p07","","",28,null],[12,"p08","","",28,null],[12,"p09","","",28,null],[12,"p10","","",28,null],[12,"p11","","",28,null],[12,"p12","","",28,null],[12,"p13","","",28,null],[12,"p14","","",28,null],[12,"p15","","",28,null],[6,"ErasedPads","","Erased pads with the prefix \'AD_B1\'",null,null],[0,"emc","imxrt_async_hal::iomuxc::pads","Pads with the prefix \'EMC\'",null,null],[6,"EMC_00","imxrt_async_hal::iomuxc::pads::emc","",null,null],[6,"EMC_01","","",null,null],[6,"EMC_02","","",null,null],[6,"EMC_03","","",null,null],[6,"EMC_04","","",null,null],[6,"EMC_05","","",null,null],[6,"EMC_06","","",null,null],[6,"EMC_07","","",null,null],[6,"EMC_08","","",null,null],[6,"EMC_09","","",null,null],[6,"EMC_10","","",null,null],[6,"EMC_11","","",null,null],[6,"EMC_12","","",null,null],[6,"EMC_13","","",null,null],[6,"EMC_14","","",null,null],[6,"EMC_15","","",null,null],[6,"EMC_16","","",null,null],[6,"EMC_17","","",null,null],[6,"EMC_18","","",null,null],[6,"EMC_19","","",null,null],[6,"EMC_20","","",null,null],[6,"EMC_21","","",null,null],[6,"EMC_22","","",null,null],[6,"EMC_23","","",null,null],[6,"EMC_24","","",null,null],[6,"EMC_25","","",null,null],[6,"EMC_26","","",null,null],[6,"EMC_27","","",null,null],[6,"EMC_28","","",null,null],[6,"EMC_29","","",null,null],[6,"EMC_30","","",null,null],[6,"EMC_31","","",null,null],[6,"EMC_32","","",null,null],[6,"EMC_33","","",null,null],[6,"EMC_34","","",null,null],[6,"EMC_35","","",null,null],[6,"EMC_36","","",null,null],[6,"EMC_37","","",null,null],[6,"EMC_38","","",null,null],[6,"EMC_39","","",null,null],[6,"EMC_40","","",null,null],[6,"EMC_41","","",null,null],[3,"Pads","","Pads with the prefix \'EMC\'",null,null],[12,"p00","","",29,null],[12,"p01","","",29,null],[12,"p02","","",29,null],[12,"p03","","",29,null],[12,"p04","","",29,null],[12,"p05","","",29,null],[12,"p06","","",29,null],[12,"p07","","",29,null],[12,"p08","","",29,null],[12,"p09","","",29,null],[12,"p10","","",29,null],[12,"p11","","",29,null],[12,"p12","","",29,null],[12,"p13","","",29,null],[12,"p14","","",29,null],[12,"p15","","",29,null],[12,"p16","","",29,null],[12,"p17","","",29,null],[12,"p18","","",29,null],[12,"p19","","",29,null],[12,"p20","","",29,null],[12,"p21","","",29,null],[12,"p22","","",29,null],[12,"p23","","",29,null],[12,"p24","","",29,null],[12,"p25","","",29,null],[12,"p26","","",29,null],[12,"p27","","",29,null],[12,"p28","","",29,null],[12,"p29","","",29,null],[12,"p30","","",29,null],[12,"p31","","",29,null],[12,"p32","","",29,null],[12,"p33","","",29,null],[12,"p34","","",29,null],[12,"p35","","",29,null],[12,"p36","","",29,null],[12,"p37","","",29,null],[12,"p38","","",29,null],[12,"p39","","",29,null],[12,"p40","","",29,null],[12,"p41","","",29,null],[6,"ErasedPads","","Erased pads with the prefix \'EMC\'",null,null],[0,"b0","imxrt_async_hal::iomuxc::pads","Pads with the prefix \'B0\'",null,null],[6,"B0_00","imxrt_async_hal::iomuxc::pads::b0","",null,null],[6,"B0_01","","",null,null],[6,"B0_02","","",null,null],[6,"B0_03","","",null,null],[6,"B0_04","","",null,null],[6,"B0_05","","",null,null],[6,"B0_06","","",null,null],[6,"B0_07","","",null,null],[6,"B0_08","","",null,null],[6,"B0_09","","",null,null],[6,"B0_10","","",null,null],[6,"B0_11","","",null,null],[6,"B0_12","","",null,null],[6,"B0_13","","",null,null],[6,"B0_14","","",null,null],[6,"B0_15","","",null,null],[3,"Pads","","Pads with the prefix \'B0\'",null,null],[12,"p00","","",30,null],[12,"p01","","",30,null],[12,"p02","","",30,null],[12,"p03","","",30,null],[12,"p04","","",30,null],[12,"p05","","",30,null],[12,"p06","","",30,null],[12,"p07","","",30,null],[12,"p08","","",30,null],[12,"p09","","",30,null],[12,"p10","","",30,null],[12,"p11","","",30,null],[12,"p12","","",30,null],[12,"p13","","",30,null],[12,"p14","","",30,null],[12,"p15","","",30,null],[6,"ErasedPads","","Erased pads with the prefix \'B0\'",null,null],[0,"b1","imxrt_async_hal::iomuxc::pads","Pads with the prefix \'B1\'",null,null],[6,"B1_00","imxrt_async_hal::iomuxc::pads::b1","",null,null],[6,"B1_01","","",null,null],[6,"B1_02","","",null,null],[6,"B1_03","","",null,null],[6,"B1_04","","",null,null],[6,"B1_05","","",null,null],[6,"B1_06","","",null,null],[6,"B1_07","","",null,null],[6,"B1_08","","",null,null],[6,"B1_09","","",null,null],[6,"B1_10","","",null,null],[6,"B1_11","","",null,null],[6,"B1_12","","",null,null],[6,"B1_13","","",null,null],[6,"B1_14","","",null,null],[6,"B1_15","","",null,null],[3,"Pads","","Pads with the prefix \'B1\'",null,null],[12,"p00","","",31,null],[12,"p01","","",31,null],[12,"p02","","",31,null],[12,"p03","","",31,null],[12,"p04","","",31,null],[12,"p05","","",31,null],[12,"p06","","",31,null],[12,"p07","","",31,null],[12,"p08","","",31,null],[12,"p09","","",31,null],[12,"p10","","",31,null],[12,"p11","","",31,null],[12,"p12","","",31,null],[12,"p13","","",31,null],[12,"p14","","",31,null],[12,"p15","","",31,null],[6,"ErasedPads","","Erased pads with the prefix \'B1\'",null,null],[0,"sd_b0","imxrt_async_hal::iomuxc::pads","Pads with the prefix \'SD_B0\'",null,null],[6,"SD_B0_00","imxrt_async_hal::iomuxc::pads::sd_b0","",null,null],[6,"SD_B0_01","","",null,null],[6,"SD_B0_02","","",null,null],[6,"SD_B0_03","","",null,null],[6,"SD_B0_04","","",null,null],[6,"SD_B0_05","","",null,null],[3,"Pads","","Pads with the prefix \'SD_B0\'",null,null],[12,"p00","","",32,null],[12,"p01","","",32,null],[12,"p02","","",32,null],[12,"p03","","",32,null],[12,"p04","","",32,null],[12,"p05","","",32,null],[6,"ErasedPads","","Erased pads with the prefix \'SD_B0\'",null,null],[0,"sd_b1","imxrt_async_hal::iomuxc::pads","Pads with the prefix \'SD_B1\'",null,null],[6,"SD_B1_00","imxrt_async_hal::iomuxc::pads::sd_b1","",null,null],[6,"SD_B1_01","","",null,null],[6,"SD_B1_02","","",null,null],[6,"SD_B1_03","","",null,null],[6,"SD_B1_04","","",null,null],[6,"SD_B1_05","","",null,null],[6,"SD_B1_06","","",null,null],[6,"SD_B1_07","","",null,null],[6,"SD_B1_08","","",null,null],[6,"SD_B1_09","","",null,null],[6,"SD_B1_10","","",null,null],[6,"SD_B1_11","","",null,null],[3,"Pads","","Pads with the prefix \'SD_B1\'",null,null],[12,"p00","","",33,null],[12,"p01","","",33,null],[12,"p02","","",33,null],[12,"p03","","",33,null],[12,"p04","","",33,null],[12,"p05","","",33,null],[12,"p06","","",33,null],[12,"p07","","",33,null],[12,"p08","","",33,null],[12,"p09","","",33,null],[12,"p10","","",33,null],[12,"p11","","",33,null],[6,"ErasedPads","","Erased pads with the prefix \'SD_B1\'",null,null],[3,"Pads","imxrt_async_hal::iomuxc::pads","All of the pads",null,null],[12,"emc","","",34,null],[12,"ad_b0","","",34,null],[12,"ad_b1","","",34,null],[12,"b0","","",34,null],[12,"b1","","",34,null],[12,"sd_b0","","",34,null],[12,"sd_b1","","",34,null],[3,"ErasedPads","","All of the pads, with all types erased",null,null],[12,"emc","","",35,null],[12,"ad_b0","","",35,null],[12,"ad_b1","","",35,null],[12,"b0","","",35,null],[12,"b1","","",35,null],[12,"sd_b0","","",35,null],[12,"sd_b1","","",35,null],[4,"I2CClockSpeed","imxrt_async_hal","I2C clock speed",null,null],[13,"KHz100","","100 KHz clock speed",5,null],[13,"KHz400","","400 KHz clock speed",5,null],[4,"SPIError","","Errors propagated from a [`SPI`] device",null,null],[13,"ClockSpeed","","Error when configuring the SPI serial clock",36,null],[3,"SPIPins","","Pins for a SPI device",null,null],[12,"sdo","","Serial data out",37,null],[12,"sdi","","Serial data in",37,null],[12,"sck","","Serial clock",37,null],[12,"pcs0","","Chip select 0",37,null],[3,"SPI","","Serial Peripheral Interface (SPI)",null,null],[4,"UARTError","","Errors propagated from a [`UART`] device",null,null],[13,"Clock","","There was an error when preparing the baud rate or clocks",38,null],[3,"UART","","UART Serial driver",null,null],[11,"from","imxrt_async_hal::dma","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"into_future","","",39,[[]]],[11,"try_poll","","",39,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"into_future","","",40,[[]]],[11,"try_poll","","",40,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"into_future","","",41,[[]]],[11,"try_poll","","",41,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","imxrt_async_hal::gpio","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"into_future","","",46,[[]]],[11,"from","imxrt_async_hal::gpt","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"into_future","","",47,[[]]],[11,"from","imxrt_async_hal::i2c","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"into_future","","",48,[[]]],[11,"try_poll","","",48,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"into_future","","",49,[[]]],[11,"try_poll","","",49,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"into_future","","",50,[[]]],[11,"try_poll","","",50,[[["context",3],["pin",3]],["poll",4]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","imxrt_async_hal::instance","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","imxrt_async_hal::pit","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"into_future","","",51,[[]]],[11,"from","imxrt_async_hal","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc::i2c","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc::pwm","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc::spi","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc::uart","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc::pads::ad_b0","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc::pads::ad_b1","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc::pads::emc","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc::pads::b0","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc::pads::b1","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc::pads::sd_b0","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc::pads::sd_b1","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc::pads","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"drop","imxrt_async_hal::dma","",41,[[]]],[11,"drop","","",40,[[]]],[11,"drop","","",39,[[]]],[11,"poll","","",39,[[["context",3],["pin",3],["fullduplex",3]],["poll",4]]],[11,"poll","","",41,[[["tx",3],["context",3],["pin",3]],["poll",4]]],[11,"poll","","",40,[[["rx",3],["context",3],["pin",3]],["poll",4]]],[11,"fmt","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",1,[[["bandwidthcontrol",4]]]],[11,"clone","","",43,[[],["error",3]]],[11,"clone","","",1,[[],["bandwidthcontrol",4]]],[11,"fmt","imxrt_async_hal::iomuxc","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"try_from","","",67,[[["erasedpad",3]],[["result",4],["pad",3]]]],[11,"eq","","",54,[[["config",3]]]],[11,"ne","","",54,[[["config",3]]]],[11,"eq","","",12,[[["drivestrength",4]]]],[11,"eq","","",13,[[["hysteresis",4]]]],[11,"eq","","",14,[[["opendrain",4]]]],[11,"eq","","",15,[[["pullkeep",4]]]],[11,"eq","","",17,[[["pullupdown",4]]]],[11,"eq","","",18,[[["slewrate",4]]]],[11,"eq","","",65,[[["daisy",3]]]],[11,"ne","","",65,[[["daisy",3]]]],[11,"eq","","",19,[[["speed",4]]]],[11,"eq","","",16,[[["pullkeepselect",4]]]],[11,"clone","","",13,[[],["hysteresis",4]]],[11,"clone","","",17,[[],["pullupdown",4]]],[11,"clone","","",18,[[],["slewrate",4]]],[11,"clone","","",19,[[],["speed",4]]],[11,"clone","","",16,[[],["pullkeepselect",4]]],[11,"clone","","",65,[[],["daisy",3]]],[11,"clone","","",14,[[],["opendrain",4]]],[11,"clone","","",54,[[],["config",3]]],[11,"clone","","",15,[[],["pullkeep",4]]],[11,"clone","","",12,[[],["drivestrength",4]]],[11,"mux","","SafetyReturns a pointer to an address that may be mutably…",67,[[]]],[11,"pad","","SafetyReturns a pointer to an address that may be mutably…",67,[[]]],[11,"mux","","SafetyReturns a pointer to an address that may be mutably…",66,[[]]],[11,"pad","","SafetyReturns a pointer to an address that may be mutably…",66,[[]]],[11,"deref","imxrt_async_hal::instance","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"fmt","imxrt_async_hal::gpio","",2,[[["formatter",3]],["result",6]]],[11,"fmt","imxrt_async_hal::i2c","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","imxrt_async_hal","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"eq","imxrt_async_hal::gpio","",2,[[["trigger",4]]]],[11,"eq","imxrt_async_hal::i2c","",5,[[["clockspeed",4]]]],[11,"drop","imxrt_async_hal::gpt","",47,[[]]],[11,"drop","imxrt_async_hal::i2c","",48,[[]]],[11,"drop","","",49,[[]]],[11,"drop","","",50,[[]]],[11,"drop","imxrt_async_hal::pit","",51,[[]]],[11,"clone","imxrt_async_hal::gpio","",2,[[],["trigger",4]]],[11,"clone","imxrt_async_hal::i2c","",5,[[],["clockspeed",4]]],[11,"poll","imxrt_async_hal::gpio","",46,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","imxrt_async_hal::gpt","",47,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","imxrt_async_hal::i2c","",48,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",49,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",50,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","imxrt_async_hal::pit","",51,[[["context",3],["pin",3]],["poll",4]]],[11,"source_signal","imxrt_async_hal","",52,[[]]],[11,"source_address","","",52,[[]]],[11,"enable_source","","",52,[[]]],[11,"disable_source","","",52,[[]]],[11,"source_signal","","",53,[[]]],[11,"source_address","","",53,[[]]],[11,"enable_source","","",53,[[]]],[11,"disable_source","","",53,[[]]],[11,"destination_signal","","",52,[[]]],[11,"destination_address","","",52,[[]]],[11,"enable_destination","","",52,[[]]],[11,"disable_destination","","",52,[[]]],[11,"destination_signal","","",53,[[]]],[11,"destination_address","","",53,[[]]],[11,"enable_destination","","",53,[[]]],[11,"disable_destination","","",53,[[]]],[11,"new","imxrt_async_hal::dma","Creates the DMA channel described by `index`",42,[[],["channel",3]]],[11,"enable","","Enable the DMA channel for transfers",42,[[]]],[11,"channel","","Returns the DMA channel number",42,[[]]],[11,"set_bandwidth_control","","Set the channel\'s bandwidth control",42,[[["option",4],["bandwidthcontrol",4]]]],[11,"reset","","Reset the transfer control descriptor owned by the DMA…",42,[[]]],[11,"set_source_address","","Set the source address for a DMA transfer",42,[[]]],[11,"set_source_offset","","Set the source offset in bytes",42,[[]]],[11,"set_destination_address","","Set the destination address for a DMA transfer",42,[[]]],[11,"set_destination_offset","","Set the destination offset in bytes",42,[[]]],[11,"set_source_attributes","","Set the transfer attributes for the source",42,[[]]],[11,"set_source_last_address_adjustment","","Set the source last address adjustment in bytes",42,[[]]],[11,"set_destination_last_address_adjustment","","Set the destination last addrss adjustment in bytes",42,[[]]],[11,"set_destination_attributes","","Set the transfer attributes for the destination",42,[[]]],[11,"set_minor_loop_bytes","","Set the number of bytes to transfer per minor loop",42,[[]]],[11,"set_transfer_iterations","","Tells the DMA channel how many transfer iterations to…",42,[[]]],[11,"set_channel_configuration","","Set the DMAMUX channel configuration",42,[[["channelconfiguration",4]]]],[11,"is_hardware_signaling","","Returns `true` if the DMA channel is receiving a service…",42,[[]]],[11,"disable","","Disable the DMA channel, preventing any DMA transfers",42,[[]]],[11,"is_interrupt","","Returns `true` if this DMA channel generated an interrupt",42,[[]]],[11,"clear_interrupt","","Clear the interrupt flag from this DMA channel",42,[[]]],[11,"set_disable_on_completion","","Enable or disable \'disable on completion\'",42,[[]]],[11,"set_interrupt_on_completion","","Enable or disable interrupt generation when the transfer…",42,[[]]],[11,"is_complete","","Indicates if the DMA transfer has completed",42,[[]]],[11,"clear_complete","","Clears completion indication",42,[[]]],[11,"is_error","","Indicates if the DMA channel is in an error state",42,[[]]],[11,"clear_error","","Clears the error flag",42,[[]]],[11,"is_active","","Indicates if this DMA channel is actively transferring data",42,[[]]],[11,"is_enabled","","Indicates if this DMA channel is enabled",42,[[]]],[11,"error_status","","Returns the value from the global error status register",42,[[],["error",3]]],[11,"start","","Start a DMA transfer",42,[[]]],[11,"raw","","Returns the raw error status value",43,[[]]],[11,"is_valid","","Logical OR of all DMA channel error status bits",43,[[]]],[11,"is_cancelled","","Indicates if the transfer was cancelled",43,[[]]],[11,"is_group_priority","","Indicates a group priority error",43,[[]]],[11,"is_channel_priority","","Indicates a channel priority error",43,[[]]],[11,"channel_number","","Indicates the channel number",43,[[]]],[11,"is_source_address","","Indicates a source address error",43,[[]]],[11,"is_source_offset","","Indicates a source offset error",43,[[]]],[11,"is_destination_address","","Indicates a destination address error",43,[[]]],[11,"is_destination_offset","","Indicates a destination offset error",43,[[]]],[11,"is_loop_configuration","","Indicates a minor / major loop configuration error",43,[[]]],[11,"is_scatter_gather","","Indicates a scatter / gather configuration error",43,[[]]],[11,"is_source_bus","","Indicates a source bus error",43,[[]]],[11,"is_destination_bus","","Indicates a destination bus error",43,[[]]],[11,"new","imxrt_async_hal","Create a `SPI` from a set of pins and a SPI instance",52,[[["spi",6],["pins",3]]]],[11,"release","","Return the pins and SPI instance that are used in this…",52,[[]]],[11,"dma_read","","Use a DMA channel to read data from the SPI peripheral",52,[[["channel",3]],[["element",8],["rx",3]]]],[11,"dma_write","","Use a DMA channel to write data to the SPI peripheral",52,[[["channel",3]],[["tx",3],["element",8]]]],[11,"dma_full_duplex","","Use two DMA channels to perform a full-duplex transfer",52,[[["channel",3]],[["fullduplex",3],["element",8]]]],[11,"set_clock_speed","","Set the SPI master clock speed",52,[[],[["error",4],["result",4]]]],[11,"new","","Create a new `UART` from a UART instance, and TX and RX pins",53,[[["uart",6]],["uart",3]]],[11,"set_baud","","Set the serial baud rate",53,[[],[["error",4],["result",4]]]],[11,"release","","Return the pins and RAL instance that comprise the UART…",53,[[]]],[11,"dma_write","","Use a DMA channel to write data to the UART peripheral",53,[[["channel",3]],["tx",3]]],[11,"dma_read","","Use a DMA channel to read data from the UART peripheral",53,[[["channel",3]],["rx",3]]],[11,"zero","imxrt_async_hal::iomuxc","Create a `Config` that will zero any unspecified field",54,[[],["config",3]]],[11,"modify","","Create a `Config` that will only modify the specified fields",54,[[],["config",3]]],[11,"is_zero","","Returns `true` if this `Config` was created using…",54,[[]]],[11,"set_hysteresis","","Set the hysteresis bit",54,[[["hysteresis",4]],["config",3]]],[11,"set_pullupdown","","Set the pull-up / pull-down value",54,[[["pullupdown",4]],["config",3]]],[11,"set_pull_keep_select","","Set the the pull-up / pull-down or keeper selection bit",54,[[["pullkeepselect",4]],["config",3]]],[11,"set_pull_keep","","Set the flag that enables the keeper or pull-up /…",54,[[["pullkeep",4]],["config",3]]],[11,"set_open_drain","","Set the open drain value",54,[[["opendrain",4]],["config",3]]],[11,"set_speed","","Set the pin speed",54,[[["speed",4]],["config",3]]],[11,"set_drive_strength","","Set the drive strength",54,[[["drivestrength",4]],["config",3]]],[11,"set_slew_rate","","Set the slew rate",54,[[["slewrate",4]],["config",3]]],[11,"write","","Commit the settings defined by this `Daisy` value to the…",65,[[]]],[11,"new","","Creates a handle to the pad",67,[[],["pad",3]]],[11,"erase","","Erase the pad\'s type, returning an `ErasedPad`",67,[[],["erasedpad",3]]],[11,"new","imxrt_async_hal::iomuxc::pads::ad_b0","Take all pads from this group",27,[[],["pads",3]]],[11,"erase","","Erase all of the pads",27,[[]]],[11,"new","imxrt_async_hal::iomuxc::pads::ad_b1","Take all pads from this group",28,[[],["pads",3]]],[11,"erase","","Erase all of the pads",28,[[]]],[11,"new","imxrt_async_hal::iomuxc::pads::emc","Take all pads from this group",29,[[],["pads",3]]],[11,"erase","","Erase all of the pads",29,[[]]],[11,"new","imxrt_async_hal::iomuxc::pads::b0","Take all pads from this group",30,[[],["pads",3]]],[11,"erase","","Erase all of the pads",30,[[]]],[11,"new","imxrt_async_hal::iomuxc::pads::b1","Take all pads from this group",31,[[],["pads",3]]],[11,"erase","","Erase all of the pads",31,[[]]],[11,"new","imxrt_async_hal::iomuxc::pads::sd_b0","Take all pads from this group",32,[[],["pads",3]]],[11,"erase","","Erase all of the pads",32,[[]]],[11,"new","imxrt_async_hal::iomuxc::pads::sd_b1","Take all pads from this group",33,[[],["pads",3]]],[11,"erase","","Erase all of the pads",33,[[]]],[11,"new","imxrt_async_hal::iomuxc::pads","Take all of the pads",34,[[],["pads",3]]],[11,"erase","","Erase the types of all pads",34,[[],["erasedpads",3]]]],"p":[[8,"Element"],[4,"BandwidthControl"],[4,"Trigger"],[3,"GPIO"],[3,"GPT"],[4,"ClockSpeed"],[4,"Error"],[4,"State"],[3,"I2C"],[8,"Inst"],[3,"Instance"],[3,"PIT"],[4,"DriveStrength"],[4,"Hysteresis"],[4,"OpenDrain"],[4,"PullKeep"],[4,"PullKeepSelect"],[4,"PullUpDown"],[4,"SlewRate"],[4,"Speed"],[8,"Unsigned"],[8,"Pin"],[8,"Pin"],[8,"Pin"],[8,"Pin"],[8,"Pin"],[3,"WrongPadError"],[3,"Pads"],[3,"Pads"],[3,"Pads"],[3,"Pads"],[3,"Pads"],[3,"Pads"],[3,"Pads"],[3,"Pads"],[3,"ErasedPads"],[4,"SPIError"],[3,"SPIPins"],[4,"UARTError"],[3,"FullDuplex"],[3,"Rx"],[3,"Tx"],[3,"Channel"],[3,"Error"],[4,"Input"],[4,"Output"],[3,"Interrupt"],[3,"Delay"],[3,"Read"],[3,"Write"],[3,"WriteRead"],[3,"Delay"],[3,"SPI"],[3,"UART"],[3,"Config"],[4,"SCL"],[4,"SDA"],[4,"A"],[4,"B"],[4,"SCK"],[4,"SDO"],[4,"SDI"],[4,"PCS0"],[4,"TX"],[4,"RX"],[3,"Daisy"],[3,"ErasedPad"],[3,"Pad"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);