var searchIndex = JSON.parse('{\
"imxrt_async_hal":{"doc":"Embedded, async Rust for i.MX RT processors","i":[[0,"ccm","imxrt_async_hal","Clock control module (CCM)",null,null],[6,"I2CClock","imxrt_async_hal::ccm","An I2C clock that contorls RAL LPI2C timing",null,null],[6,"PerClock","","A periodic clock that controls RAL PIT and GPT timings",null,null],[6,"SPIClock","","A SPI clock that controls RAL LPSPI timing",null,null],[6,"UARTClock","","A UART clock that controls RAL LPUART timing",null,null],[6,"CCM","","Helper for a clock control module designed to the RAL…",null,null],[4,"ClockGate","","Describes a clock gate setting",null,null],[13,"Off","","Clock is off during all modes",0,null],[13,"OnlyRun","","Clock is on in run mode, but off in wait and stop modes",0,null],[13,"On","","Clock is on in all modes, except stop mode",0,null],[0,"dma","imxrt_async_hal","Direct Memory Access (DMA) for async I/O",null,null],[4,"BandwidthControl","imxrt_async_hal::dma","Throttles the amount of bus bandwidth consumed by the eDMA",null,null],[13,"Stall4Cycles","","DMA engine stalls for 4 cycles after each R/W.",1,null],[13,"Stall8Cycles","","DMA engine stalls for 8 cycles after each R/W.",1,null],[3,"Channel","","A DMA channel",null,null],[3,"ErrorStatus","","A wrapper around a DMA error status value",null,null],[0,"pipe","","Cross-task communication with DMA channels",null,null],[6,"Result","imxrt_async_hal::dma::pipe","Alias for a `Result` that might return an `Error`.",null,null],[3,"Sender","","The sending half of a pipe",null,null],[3,"Receiver","","The receiving half of a pipe",null,null],[5,"new","","Create a pipe for sending and receiving data",null,[[["channel",3]]]],[11,"send","","Await the receive half, and transmit `value` once the…",2,[[]]],[11,"receive","","Await the sender to send data, unblocking once the…",3,[[]]],[17,"CHANNEL_COUNT","imxrt_async_hal::dma","",null,null],[4,"Error","","An error when preparing a transfer",null,null],[13,"ScheduledTransfer","","There is already a scheduled transfer",4,null],[13,"Setup","","Error setting up the DMA transfer",4,null],[13,"Cancelled","","The operation was cancelled",4,null],[5,"channels","","Initialize and acquire the DMA channels",null,[[["instance",3],["instance",3]]]],[0,"gpio","imxrt_async_hal","GPIOs",null,null],[4,"Input","imxrt_async_hal::gpio","Indicates that a pin is configured as an input",null,null],[4,"Output","","Indicates that a pin is configured as an output",null,null],[3,"GPIO","","A wrapper around an i.MX RT processor pad, supporting…",null,null],[11,"new","","Create a GPIO from a pad that supports a GPIO configuration",5,[[]]],[11,"output","","Transition the GPIO from an input to an output",5,[[],[["gpio",3],["output",4]]]],[11,"is_set","","Returns `true` if this input pin is high",5,[[]]],[11,"wait_for","","Sets the trigger for the input GPIO, and await for the…",5,[[["trigger",4]]]],[11,"input","","Transition the pin from an output to an input",5,[[],[["input",4],["gpio",3]]]],[11,"set","","Drive the GPIO high",5,[[]]],[11,"clear","","Drive the GPIO low",5,[[]]],[11,"is_set","","Returns `true` if the pin is driving high",5,[[]]],[11,"toggle","","Alternate the state of the pin",5,[[]]],[4,"Trigger","","Input interrupt triggers",null,null],[13,"Low","","Interrupt when GPIO is low",6,null],[13,"High","","Interrupt when GPIO is high",6,null],[13,"RisingEdge","","Interrupt after GPIO rising edge",6,null],[13,"FallingEdge","","Interrupt after GPIO falling edge",6,null],[13,"EitherEdge","","Interrupt after either a rising or falling edge",6,null],[0,"instance","imxrt_async_hal","Strongly-typed peripherals",null,null],[8,"Inst","imxrt_async_hal::instance","A trait implemented on RAL instances",null,null],[10,"inst","","Return the peripheral instance as a run-time value",7,[[]]],[3,"Instance","","A strongly-typed RAL instance",null,null],[11,"release","","Returns the wrapped RAL instance",8,[[]]],[6,"UART","","Alias for an `Instance` around a `ral::lpuart::Instance`",null,null],[5,"uart","","Specify a `UART` instance",null,[[["instance",3]],[["option",4],["uart",6]]]],[6,"SPI","","Alias for an `Instance` around a `ral::lpspi::Instance`",null,null],[5,"spi","","Specify a `SPI` instance",null,[[["instance",3]],[["spi",6],["option",4]]]],[6,"I2C","","Alias for an `Instance` around a `ral::lpi2c::Instance`",null,null],[5,"i2c","","Specify an `I2C` instance",null,[[["instance",3]],[["option",4],["i2c",6]]]],[0,"iomuxc","imxrt_async_hal","Pad multiplexing and configuration",null,null],[5,"configure","imxrt_async_hal::iomuxc","Applies the configuration `config` for the supplied pad",null,[[["config",3]]]],[3,"Config","","A configuration capable of compile-time, `const`…",null,null],[4,"DriveStrength","","Drive strength",null,null],[13,"Disabled","","",9,null],[13,"R0","","150 Ohm @ 3.3V, 260 Ohm@1.8V",9,null],[13,"R0_2","","R0 / 2",9,null],[13,"R0_3","","R0 / 3",9,null],[13,"R0_4","","R0 / 4",9,null],[13,"R0_5","","",9,null],[13,"R0_6","","",9,null],[13,"R0_7","","",9,null],[4,"Hysteresis","","The hysteresis (HYS) bit controls whether a pin acts as a…",null,null],[13,"Enabled","","",10,null],[13,"Disabled","","",10,null],[4,"OpenDrain","","Open Drain Enable Field",null,null],[13,"Enabled","","",11,null],[13,"Disabled","","",11,null],[4,"PullKeep","","Enable or disable the pull / keeper functionality",null,null],[13,"Enabled","","",12,null],[13,"Disabled","","",12,null],[4,"PullKeepSelect","","Control signal to enable internal pull-up/down resistors…",null,null],[13,"Keeper","","Keep the previous output value when the output driver is…",13,null],[13,"Pull","","Pull-up or pull-down (determined by `PullUpDown` flags).",13,null],[4,"PullUpDown","","Controls signals to select pull-up or pull-down internal…",null,null],[13,"Pulldown100k","","100KOhm pull Down",14,null],[13,"Pullup47k","","47KOhm pull up",14,null],[13,"Pullup100k","","100KOhm pull up",14,null],[13,"Pullup22k","","22KOhm pull up",14,null],[4,"SlewRate","","Slew Rate",null,null],[13,"Fast","","",15,null],[13,"Slow","","",15,null],[4,"Speed","","Sets electrical characteristics of a pin in a given…",null,null],[13,"Low","","",16,null],[13,"Medium","","",16,null],[13,"Fast","","",16,null],[13,"Max","","",16,null],[0,"consts","","Type-level constants and traits",null,null],[6,"U0","imxrt_async_hal::iomuxc::consts","",null,null],[6,"U1","","",null,null],[6,"U10","","",null,null],[6,"U11","","",null,null],[6,"U12","","",null,null],[6,"U13","","",null,null],[6,"U14","","",null,null],[6,"U15","","",null,null],[6,"U16","","",null,null],[6,"U17","","",null,null],[6,"U18","","",null,null],[6,"U19","","",null,null],[6,"U2","","",null,null],[6,"U20","","",null,null],[6,"U21","","",null,null],[6,"U22","","",null,null],[6,"U23","","",null,null],[6,"U24","","",null,null],[6,"U25","","",null,null],[6,"U26","","",null,null],[6,"U27","","",null,null],[6,"U28","","",null,null],[6,"U29","","",null,null],[6,"U3","","",null,null],[6,"U30","","",null,null],[6,"U31","","",null,null],[6,"U32","","",null,null],[6,"U33","","",null,null],[6,"U34","","",null,null],[6,"U35","","",null,null],[6,"U36","","",null,null],[6,"U37","","",null,null],[6,"U38","","",null,null],[6,"U39","","",null,null],[6,"U4","","",null,null],[6,"U40","","",null,null],[6,"U41","","",null,null],[6,"U5","","",null,null],[6,"U6","","",null,null],[6,"U7","","",null,null],[6,"U8","","",null,null],[6,"U9","","",null,null],[8,"Unsigned","","The marker trait for compile time unsigned integers.",null,null],[18,"U8","","",17,null],[18,"U16","","",17,null],[18,"U32","","",17,null],[18,"U64","","",17,null],[18,"USIZE","","",17,null],[18,"I8","","",17,null],[18,"I16","","",17,null],[18,"I32","","",17,null],[18,"I64","","",17,null],[18,"ISIZE","","",17,null],[10,"to_u8","","",17,[[]]],[10,"to_u16","","",17,[[]]],[10,"to_u32","","",17,[[]]],[10,"to_u64","","",17,[[]]],[10,"to_usize","","",17,[[]]],[10,"to_i8","","",17,[[]]],[10,"to_i16","","",17,[[]]],[10,"to_i32","","",17,[[]]],[10,"to_i64","","",17,[[]]],[10,"to_isize","","",17,[[]]],[0,"gpio","imxrt_async_hal::iomuxc","GPIO pad configuration",null,null],[8,"Pin","imxrt_async_hal::iomuxc::gpio","A GPIO pin",null,null],[18,"ALT","","The alternate value for this pad",18,null],[16,"Module","","The GPIO module; `U5` for `GPIO5`",18,null],[16,"Offset","","The offset; `U13` for `GPIO5_IO13`",18,null],[5,"prepare","","Prepare a pad to be used as a GPIO pin",null,[[]]],[0,"i2c","imxrt_async_hal::iomuxc","I2C pad configuration",null,null],[4,"SCL","imxrt_async_hal::iomuxc::i2c","Tag that indicates the SCL signal",null,null],[4,"SDA","","Tag that indicates the SDA signal",null,null],[8,"Signal","","An I2C signal; one of `SCL` or `SDA`",null,null],[8,"Pin","","An I2C pin",null,null],[18,"ALT","","Alternate value for this pin",19,null],[18,"DAISY","","Daisy register",19,null],[16,"Signal","","I2C Signal",19,null],[16,"Module","","I2C module; `U2` for `I2C2`",19,null],[5,"prepare","","Prepare an I2C pin",null,[[]]],[0,"pwm","imxrt_async_hal::iomuxc","PWM pad configuration",null,null],[8,"Output","imxrt_async_hal::iomuxc::pwm","A PWM output identified; one of `A` or `B`",null,null],[4,"A","","PWM output A",null,null],[4,"B","","PWM output B",null,null],[8,"Pin","","A PWM pin",null,null],[18,"ALT","","The alternate mode for the PWM pin",20,null],[16,"Output","","The output identifier",20,null],[16,"Module","","The PWM module; `U2` is `PWM2`",20,null],[16,"Submodule","","The PWM submodule; `U3` for `PWM2_SM3`",20,null],[5,"prepare","","Prepare a PWM pin",null,[[]]],[0,"spi","imxrt_async_hal::iomuxc","SPI pad configurations",null,null],[8,"Signal","imxrt_async_hal::iomuxc::spi","A SPI signal",null,null],[4,"SCK","","A tag that indicates a SPI clock pad",null,null],[4,"SDO","","A tag that indicates a SPI data out pad",null,null],[4,"SDI","","A tag that indicates a SPI data in pad",null,null],[4,"PCS0","","A tag that indicates a SPI chip select pad",null,null],[8,"Pin","","A SPI pin",null,null],[18,"ALT","","Alternate value for this pin",21,null],[18,"DAISY","","Daisy register",21,null],[16,"Signal","","SPI signal",21,null],[16,"Module","","SPI module; `U3` for `SPI3`",21,null],[5,"prepare","","Prepare a SPI pin",null,[[]]],[0,"uart","imxrt_async_hal::iomuxc","UART pad configuration",null,null],[4,"TX","imxrt_async_hal::iomuxc::uart","Type tag for the transfer pin",null,null],[4,"RX","","Type tag for the receive pin",null,null],[8,"Direction","","A pin direction, either transfer or receive",null,null],[8,"Pin","","A UART pin",null,null],[18,"ALT","","The alternate value for the UART pin",22,null],[18,"DAISY","","The daisy register which will select the pad",22,null],[16,"Direction","","Pin direction",22,null],[16,"Module","","UART module; `U3` for `UART3`",22,null],[5,"prepare","","Prepare a UART pin",null,[[]]],[3,"Daisy","imxrt_async_hal::iomuxc","A daisy selection",null,null],[3,"ErasedPad","","A pad that has its type erased",null,null],[3,"Pad","","An i.MXT RT pad",null,null],[3,"WrongPadError","","An error that indicates the conversion from an `ErasedPad`…",null,null],[12,"0","","",23,null],[0,"pads","","",null,null],[0,"ad_b0","imxrt_async_hal::iomuxc::pads","Pads with the prefix \'AD_B0\'",null,null],[6,"AD_B0_00","imxrt_async_hal::iomuxc::pads::ad_b0","",null,null],[6,"AD_B0_01","","",null,null],[6,"AD_B0_02","","",null,null],[6,"AD_B0_03","","",null,null],[6,"AD_B0_04","","",null,null],[6,"AD_B0_05","","",null,null],[6,"AD_B0_06","","",null,null],[6,"AD_B0_07","","",null,null],[6,"AD_B0_08","","",null,null],[6,"AD_B0_09","","",null,null],[6,"AD_B0_10","","",null,null],[6,"AD_B0_11","","",null,null],[6,"AD_B0_12","","",null,null],[6,"AD_B0_13","","",null,null],[6,"AD_B0_14","","",null,null],[6,"AD_B0_15","","",null,null],[3,"Pads","","Pads with the prefix \'AD_B0\'",null,null],[12,"p00","","",24,null],[12,"p01","","",24,null],[12,"p02","","",24,null],[12,"p03","","",24,null],[12,"p04","","",24,null],[12,"p05","","",24,null],[12,"p06","","",24,null],[12,"p07","","",24,null],[12,"p08","","",24,null],[12,"p09","","",24,null],[12,"p10","","",24,null],[12,"p11","","",24,null],[12,"p12","","",24,null],[12,"p13","","",24,null],[12,"p14","","",24,null],[12,"p15","","",24,null],[6,"ErasedPads","","Erased pads with the prefix \'AD_B0\'",null,null],[0,"ad_b1","imxrt_async_hal::iomuxc::pads","Pads with the prefix \'AD_B1\'",null,null],[6,"AD_B1_00","imxrt_async_hal::iomuxc::pads::ad_b1","",null,null],[6,"AD_B1_01","","",null,null],[6,"AD_B1_02","","",null,null],[6,"AD_B1_03","","",null,null],[6,"AD_B1_04","","",null,null],[6,"AD_B1_05","","",null,null],[6,"AD_B1_06","","",null,null],[6,"AD_B1_07","","",null,null],[6,"AD_B1_08","","",null,null],[6,"AD_B1_09","","",null,null],[6,"AD_B1_10","","",null,null],[6,"AD_B1_11","","",null,null],[6,"AD_B1_12","","",null,null],[6,"AD_B1_13","","",null,null],[6,"AD_B1_14","","",null,null],[6,"AD_B1_15","","",null,null],[3,"Pads","","Pads with the prefix \'AD_B1\'",null,null],[12,"p00","","",25,null],[12,"p01","","",25,null],[12,"p02","","",25,null],[12,"p03","","",25,null],[12,"p04","","",25,null],[12,"p05","","",25,null],[12,"p06","","",25,null],[12,"p07","","",25,null],[12,"p08","","",25,null],[12,"p09","","",25,null],[12,"p10","","",25,null],[12,"p11","","",25,null],[12,"p12","","",25,null],[12,"p13","","",25,null],[12,"p14","","",25,null],[12,"p15","","",25,null],[6,"ErasedPads","","Erased pads with the prefix \'AD_B1\'",null,null],[0,"emc","imxrt_async_hal::iomuxc::pads","Pads with the prefix \'EMC\'",null,null],[6,"EMC_00","imxrt_async_hal::iomuxc::pads::emc","",null,null],[6,"EMC_01","","",null,null],[6,"EMC_02","","",null,null],[6,"EMC_03","","",null,null],[6,"EMC_04","","",null,null],[6,"EMC_05","","",null,null],[6,"EMC_06","","",null,null],[6,"EMC_07","","",null,null],[6,"EMC_08","","",null,null],[6,"EMC_09","","",null,null],[6,"EMC_10","","",null,null],[6,"EMC_11","","",null,null],[6,"EMC_12","","",null,null],[6,"EMC_13","","",null,null],[6,"EMC_14","","",null,null],[6,"EMC_15","","",null,null],[6,"EMC_16","","",null,null],[6,"EMC_17","","",null,null],[6,"EMC_18","","",null,null],[6,"EMC_19","","",null,null],[6,"EMC_20","","",null,null],[6,"EMC_21","","",null,null],[6,"EMC_22","","",null,null],[6,"EMC_23","","",null,null],[6,"EMC_24","","",null,null],[6,"EMC_25","","",null,null],[6,"EMC_26","","",null,null],[6,"EMC_27","","",null,null],[6,"EMC_28","","",null,null],[6,"EMC_29","","",null,null],[6,"EMC_30","","",null,null],[6,"EMC_31","","",null,null],[6,"EMC_32","","",null,null],[6,"EMC_33","","",null,null],[6,"EMC_34","","",null,null],[6,"EMC_35","","",null,null],[6,"EMC_36","","",null,null],[6,"EMC_37","","",null,null],[6,"EMC_38","","",null,null],[6,"EMC_39","","",null,null],[6,"EMC_40","","",null,null],[6,"EMC_41","","",null,null],[3,"Pads","","Pads with the prefix \'EMC\'",null,null],[12,"p00","","",26,null],[12,"p01","","",26,null],[12,"p02","","",26,null],[12,"p03","","",26,null],[12,"p04","","",26,null],[12,"p05","","",26,null],[12,"p06","","",26,null],[12,"p07","","",26,null],[12,"p08","","",26,null],[12,"p09","","",26,null],[12,"p10","","",26,null],[12,"p11","","",26,null],[12,"p12","","",26,null],[12,"p13","","",26,null],[12,"p14","","",26,null],[12,"p15","","",26,null],[12,"p16","","",26,null],[12,"p17","","",26,null],[12,"p18","","",26,null],[12,"p19","","",26,null],[12,"p20","","",26,null],[12,"p21","","",26,null],[12,"p22","","",26,null],[12,"p23","","",26,null],[12,"p24","","",26,null],[12,"p25","","",26,null],[12,"p26","","",26,null],[12,"p27","","",26,null],[12,"p28","","",26,null],[12,"p29","","",26,null],[12,"p30","","",26,null],[12,"p31","","",26,null],[12,"p32","","",26,null],[12,"p33","","",26,null],[12,"p34","","",26,null],[12,"p35","","",26,null],[12,"p36","","",26,null],[12,"p37","","",26,null],[12,"p38","","",26,null],[12,"p39","","",26,null],[12,"p40","","",26,null],[12,"p41","","",26,null],[6,"ErasedPads","","Erased pads with the prefix \'EMC\'",null,null],[0,"b0","imxrt_async_hal::iomuxc::pads","Pads with the prefix \'B0\'",null,null],[6,"B0_00","imxrt_async_hal::iomuxc::pads::b0","",null,null],[6,"B0_01","","",null,null],[6,"B0_02","","",null,null],[6,"B0_03","","",null,null],[6,"B0_04","","",null,null],[6,"B0_05","","",null,null],[6,"B0_06","","",null,null],[6,"B0_07","","",null,null],[6,"B0_08","","",null,null],[6,"B0_09","","",null,null],[6,"B0_10","","",null,null],[6,"B0_11","","",null,null],[6,"B0_12","","",null,null],[6,"B0_13","","",null,null],[6,"B0_14","","",null,null],[6,"B0_15","","",null,null],[3,"Pads","","Pads with the prefix \'B0\'",null,null],[12,"p00","","",27,null],[12,"p01","","",27,null],[12,"p02","","",27,null],[12,"p03","","",27,null],[12,"p04","","",27,null],[12,"p05","","",27,null],[12,"p06","","",27,null],[12,"p07","","",27,null],[12,"p08","","",27,null],[12,"p09","","",27,null],[12,"p10","","",27,null],[12,"p11","","",27,null],[12,"p12","","",27,null],[12,"p13","","",27,null],[12,"p14","","",27,null],[12,"p15","","",27,null],[6,"ErasedPads","","Erased pads with the prefix \'B0\'",null,null],[0,"b1","imxrt_async_hal::iomuxc::pads","Pads with the prefix \'B1\'",null,null],[6,"B1_00","imxrt_async_hal::iomuxc::pads::b1","",null,null],[6,"B1_01","","",null,null],[6,"B1_02","","",null,null],[6,"B1_03","","",null,null],[6,"B1_04","","",null,null],[6,"B1_05","","",null,null],[6,"B1_06","","",null,null],[6,"B1_07","","",null,null],[6,"B1_08","","",null,null],[6,"B1_09","","",null,null],[6,"B1_10","","",null,null],[6,"B1_11","","",null,null],[6,"B1_12","","",null,null],[6,"B1_13","","",null,null],[6,"B1_14","","",null,null],[6,"B1_15","","",null,null],[3,"Pads","","Pads with the prefix \'B1\'",null,null],[12,"p00","","",28,null],[12,"p01","","",28,null],[12,"p02","","",28,null],[12,"p03","","",28,null],[12,"p04","","",28,null],[12,"p05","","",28,null],[12,"p06","","",28,null],[12,"p07","","",28,null],[12,"p08","","",28,null],[12,"p09","","",28,null],[12,"p10","","",28,null],[12,"p11","","",28,null],[12,"p12","","",28,null],[12,"p13","","",28,null],[12,"p14","","",28,null],[12,"p15","","",28,null],[6,"ErasedPads","","Erased pads with the prefix \'B1\'",null,null],[0,"sd_b0","imxrt_async_hal::iomuxc::pads","Pads with the prefix \'SD_B0\'",null,null],[6,"SD_B0_00","imxrt_async_hal::iomuxc::pads::sd_b0","",null,null],[6,"SD_B0_01","","",null,null],[6,"SD_B0_02","","",null,null],[6,"SD_B0_03","","",null,null],[6,"SD_B0_04","","",null,null],[6,"SD_B0_05","","",null,null],[3,"Pads","","Pads with the prefix \'SD_B0\'",null,null],[12,"p00","","",29,null],[12,"p01","","",29,null],[12,"p02","","",29,null],[12,"p03","","",29,null],[12,"p04","","",29,null],[12,"p05","","",29,null],[6,"ErasedPads","","Erased pads with the prefix \'SD_B0\'",null,null],[0,"sd_b1","imxrt_async_hal::iomuxc::pads","Pads with the prefix \'SD_B1\'",null,null],[6,"SD_B1_00","imxrt_async_hal::iomuxc::pads::sd_b1","",null,null],[6,"SD_B1_01","","",null,null],[6,"SD_B1_02","","",null,null],[6,"SD_B1_03","","",null,null],[6,"SD_B1_04","","",null,null],[6,"SD_B1_05","","",null,null],[6,"SD_B1_06","","",null,null],[6,"SD_B1_07","","",null,null],[6,"SD_B1_08","","",null,null],[6,"SD_B1_09","","",null,null],[6,"SD_B1_10","","",null,null],[6,"SD_B1_11","","",null,null],[3,"Pads","","Pads with the prefix \'SD_B1\'",null,null],[12,"p00","","",30,null],[12,"p01","","",30,null],[12,"p02","","",30,null],[12,"p03","","",30,null],[12,"p04","","",30,null],[12,"p05","","",30,null],[12,"p06","","",30,null],[12,"p07","","",30,null],[12,"p08","","",30,null],[12,"p09","","",30,null],[12,"p10","","",30,null],[12,"p11","","",30,null],[6,"ErasedPads","","Erased pads with the prefix \'SD_B1\'",null,null],[3,"Pads","imxrt_async_hal::iomuxc::pads","All of the pads",null,null],[12,"emc","","",31,null],[12,"ad_b0","","",31,null],[12,"ad_b1","","",31,null],[12,"b0","","",31,null],[12,"b1","","",31,null],[12,"sd_b0","","",31,null],[12,"sd_b1","","",31,null],[3,"ErasedPads","","All of the pads, with all types erased",null,null],[12,"emc","","",32,null],[12,"ad_b0","","",32,null],[12,"ad_b1","","",32,null],[12,"b0","","",32,null],[12,"b1","","",32,null],[12,"sd_b0","","",32,null],[12,"sd_b1","","",32,null],[5,"new","imxrt_async_hal::iomuxc","Turn the `IOMUXC` instance into pads",null,[[["instance",3]],["pads",3]]],[3,"GPT","imxrt_async_hal","General purpose timers (GPT)",null,null],[4,"I2CClockSpeed","","I2C clock speed",null,null],[13,"KHz100","","100 KHz clock speed",33,null],[13,"KHz400","","400 KHz clock speed",33,null],[4,"I2CError","","Errors propagated from an `I2C` device",null,null],[13,"ClockSpeed","","There was an issue when setting the clock speed",34,null],[13,"LostBusArbitration","","Master has lost arbitration",34,null],[13,"PinLowTimeout","","SCL and / or SDA went low for too long",34,null],[13,"UnexpectedNACK","","Detected a NACK when sending an address or data",34,null],[13,"FIFO","","Sending or receiving data without a START condition",34,null],[13,"RequestTooMuchData","","Requesting too much data in a receive",34,null],[13,"BusyIsBusy","","Busy is busy",34,null],[3,"I2C","","I2C Driver",null,null],[3,"PIT","","Periodic interrupt timer (PIT)",null,null],[4,"SPIError","","Errors propagated from a `SPI` device",null,null],[13,"DMA","","Error when coordinating a DMA transaction",35,null],[13,"ClockSpeed","","Error when configuring the SPI serial clock",35,null],[3,"SPIPins","","Pins for a SPI device",null,null],[12,"sdo","","Serial data out",36,null],[12,"sdi","","Serial data in",36,null],[12,"sck","","Serial clock",36,null],[12,"pcs0","","Chip select 0",36,null],[3,"SPI","","Serial Peripheral Interface (SPI)",null,null],[4,"UARTError","","Errors propagated from a `UART` device",null,null],[13,"Clock","","There was an error when preparing the baud rate or clocks",37,null],[13,"DMA","","Error when preparing a DMA transaction",37,null],[3,"UART","","UART Serial driver",null,null],[11,"from","imxrt_async_hal::ccm","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","imxrt_async_hal::dma","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","imxrt_async_hal::dma::pipe","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","imxrt_async_hal::dma","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","imxrt_async_hal::gpio","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","imxrt_async_hal","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","imxrt_async_hal::instance","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","imxrt_async_hal","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc::i2c","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc::pwm","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc::spi","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc::uart","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc::pads::ad_b0","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc::pads::ad_b1","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc::pads::emc","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc::pads::b0","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc::pads::b1","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc::pads::sd_b0","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc::pads::sd_b1","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","imxrt_async_hal::iomuxc::pads","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"eq","imxrt_async_hal::ccm","",0,[[["clockgate",4]]]],[11,"clone","","",0,[[],["clockgate",4]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","imxrt_async_hal::dma","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",1,[[["bandwidthcontrol",4]]]],[11,"clone","","",39,[[],["errorstatus",3]]],[11,"clone","","",1,[[],["bandwidthcontrol",4]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","imxrt_async_hal::iomuxc","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",59,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",60,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"try_from","","",60,[[["erasedpad",3]],[["pad",3],["result",4]]]],[11,"eq","","",58,[[["daisy",3]]]],[11,"ne","","",58,[[["daisy",3]]]],[11,"eq","","",47,[[["config",3]]]],[11,"ne","","",47,[[["config",3]]]],[11,"eq","","",14,[[["pullupdown",4]]]],[11,"eq","","",12,[[["pullkeep",4]]]],[11,"eq","","",11,[[["opendrain",4]]]],[11,"eq","","",15,[[["slewrate",4]]]],[11,"eq","","",10,[[["hysteresis",4]]]],[11,"eq","","",16,[[["speed",4]]]],[11,"eq","","",9,[[["drivestrength",4]]]],[11,"eq","","",13,[[["pullkeepselect",4]]]],[11,"clone","","",12,[[],["pullkeep",4]]],[11,"clone","","",58,[[],["daisy",3]]],[11,"clone","","",47,[[],["config",3]]],[11,"clone","","",14,[[],["pullupdown",4]]],[11,"clone","","",15,[[],["slewrate",4]]],[11,"clone","","",9,[[],["drivestrength",4]]],[11,"clone","","",11,[[],["opendrain",4]]],[11,"clone","","",13,[[],["pullkeepselect",4]]],[11,"clone","","",16,[[],["speed",4]]],[11,"clone","","",10,[[],["hysteresis",4]]],[11,"mux","","SafetyReturns a pointer to an address that may be mutably…",60,[[]]],[11,"pad","","SafetyReturns a pointer to an address that may be mutably…",60,[[]]],[11,"mux","","SafetyReturns a pointer to an address that may be mutably…",59,[[]]],[11,"pad","","SafetyReturns a pointer to an address that may be mutably…",59,[[]]],[11,"deref","imxrt_async_hal::instance","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"from","imxrt_async_hal","",35,[[["error",4]]]],[11,"from","","",37,[[["error",4]]]],[11,"fmt","imxrt_async_hal::dma","",4,[[["formatter",3]],["result",6]]],[11,"fmt","imxrt_async_hal::gpio","",6,[[["formatter",3]],["result",6]]],[11,"fmt","imxrt_async_hal","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"eq","imxrt_async_hal::gpio","",6,[[["trigger",4]]]],[11,"eq","imxrt_async_hal","",33,[[["clockspeed",4]]]],[11,"drop","imxrt_async_hal::dma::pipe","",2,[[]]],[11,"drop","","",3,[[]]],[11,"clone","imxrt_async_hal::gpio","",6,[[],["trigger",4]]],[11,"clone","imxrt_async_hal","",33,[[],["clockspeed",4]]],[11,"set_bandwidth_control","imxrt_async_hal::dma","Set the channel\'s bandwidth control",38,[[["option",4],["bandwidthcontrol",4]]]],[11,"channel","","Returns the DMA channel number",38,[[]]],[11,"new","","Creates the DMA channel described by `index`",38,[[],["channel",3]]],[11,"reset","","Reset the transfer control descriptor owned by the DMA…",38,[[]]],[11,"set_source_transfer","","Prepare the source of a transfer; see `Transfer` for…",38,[[["transfer",3]]]],[11,"set_destination_transfer","","Prepare the destination for a transfer; see `Transfer` for…",38,[[["transfer",3]]]],[11,"set_minor_loop_bytes","","Set the number of bytes to transfer per minor loop",38,[[]]],[11,"set_minor_loop_elements","","Se the number of elements to move in each minor loop",38,[[]]],[11,"set_transfer_iterations","","Tells the DMA channel how many transfer iterations to…",38,[[]]],[11,"set_trigger_from_hardware","","Enable or disabling triggering from hardware",38,[[["option",4]]]],[11,"set_always_on","","Set this DMA channel as always on",38,[[]]],[11,"is_hardware_signaling","","Returns `true` if the DMA channel is receiving a service…",38,[[]]],[11,"enable","","Enable the DMA multiplexer request, which signals that the…",38,[[]]],[11,"disable","","Disable the DMA channel, preventing any DMA transfers",38,[[]]],[11,"is_interrupt","","Returns `true` if this DMA channel generated an interrupt",38,[[]]],[11,"clear_interrupt","","Clear the interrupt flag from this DMA channel",38,[[]]],[11,"set_disable_on_completion","","Enable or disable \'disable on completion\'",38,[[]]],[11,"set_interrupt_on_completion","","Enable or disable interrupt generation when the transfer…",38,[[]]],[11,"is_complete","","Indicates if the DMA transfer has completed",38,[[]]],[11,"clear_complete","","Clears completion indication",38,[[]]],[11,"is_error","","Indicates if the DMA channel is in an error state",38,[[]]],[11,"clear_error","","Clears the error flag",38,[[]]],[11,"is_active","","Indicates if this DMA channel is actively transferring data",38,[[]]],[11,"is_enabled","","Indicates if this DMA channel is enabled",38,[[]]],[11,"error_status","","Returns the value from the global error status register",38,[[],["errorstatus",3]]],[11,"start","","Start a DMA transfer",38,[[]]],[11,"raw","","Returns the raw error status value",39,[[]]],[11,"new","imxrt_async_hal","Create a new `GPT` from a RAL GPT instance",42,[[["perclock",6],["instance",3]]]],[11,"delay","","Wait for the specified `duration` to elapse",42,[[["duration",3]]]],[11,"delay_us","","Wait for `microseconds` to elapse",42,[[]]],[11,"clock_period","","Returns the `GPT` clock period",42,[[],["duration",3]]],[11,"new","","Create an I2C driver from an I2C instance and a pair of…",43,[[["i2c",6],["i2cclock",6]]]],[11,"release","","Release the I2C peripheral components",43,[[]]],[11,"set_clock_speed","","Set the I2C clock speed",43,[[["clockspeed",4]],[["error",4],["result",4]]]],[11,"write_read","","Perform a write-read to an I2C device identified by…",43,[[]]],[11,"write","","Perform an I2C write, sending `buffer` to the I2C device…",43,[[]]],[11,"read","","Request a `buffer` of data from an I2C device identified…",43,[[]]],[11,"new","","Acquire four PIT channels from the RAL\'s PIT instance",44,[[["perclock",6],["instance",3]]]],[11,"delay_us","","Wait for `microseconds` to elapse",44,[[]]],[11,"delay","","Wait for the specified `duration` to elapse",44,[[["duration",3]]]],[11,"clock_period","","Returns the PIT clock period",44,[[],["duration",3]]],[11,"new","","Create a `SPI` from a set of pins, a SPI peripheral…",45,[[["pins",3],["spiclock",6],["spi",6]]]],[11,"release","","Return the pins, instance, and DMA channels that are used…",45,[[]]],[11,"set_clock_speed","","Set the SPI master clock speed",45,[[],[["error",4],["result",4]]]],[11,"read_u8","","Await for a `u8` `buffer` of data from a SPI device",45,[[]]],[11,"read_u16","","Await for a `u16` `buffer` of data from a SPI device",45,[[]]],[11,"write_u8","","Transmit a buffer of bytes to a SPI device",45,[[]]],[11,"write_u16","","Transmit a buffer of `u16`s to a SPI device",45,[[]]],[11,"full_duplex_u8","","Transfer bytes from `buffer` while simultaneously…",45,[[]]],[11,"full_duplex_u16","","Transfer `u16` words from `buffer` while simultaneously…",45,[[]]],[11,"new","","Create a new `UART` from a UART instance, TX and RX pins,…",46,[[["uartclock",6],["uart",6],["channel",3]],["uart",3]]],[11,"set_baud","","Set the serial baud rate",46,[[],[["error",4],["result",4]]]],[11,"release","","Return the pins, RAL instance, and DMA channel that…",46,[[]]],[11,"read","","Wait to receive a `buffer` of data",46,[[]]],[11,"write","","Wait to send a `buffer` of data",46,[[]]],[11,"zero","imxrt_async_hal::iomuxc","Create a `Config` that will zero any unspecified field",47,[[],["config",3]]],[11,"modify","","Create a `Config` that will only modify the specified fields",47,[[],["config",3]]],[11,"is_zero","","Returns `true` if this `Config` was created using…",47,[[]]],[11,"set_hysteresis","","Set the hysteresis bit",47,[[["hysteresis",4]],["config",3]]],[11,"set_pullupdown","","Set the pull-up / pull-down value",47,[[["pullupdown",4]],["config",3]]],[11,"set_pull_keep_select","","Set the the pull-up / pull-down or keeper selection bit",47,[[["pullkeepselect",4]],["config",3]]],[11,"set_pull_keep","","Set the flag that enables the keeper or pull-up /…",47,[[["pullkeep",4]],["config",3]]],[11,"set_open_drain","","Set the open drain value",47,[[["opendrain",4]],["config",3]]],[11,"set_speed","","Set the pin speed",47,[[["speed",4]],["config",3]]],[11,"set_drive_strength","","Set the drive strength",47,[[["drivestrength",4]],["config",3]]],[11,"set_slew_rate","","Set the slew rate",47,[[["slewrate",4]],["config",3]]],[11,"write","","Commit the settings defined by this `Daisy` value to the…",58,[[]]],[11,"new","","Creates a handle to the pad",60,[[],["pad",3]]],[11,"erase","","Erase the pad\'s type, returning an `ErasedPad`",60,[[],["erasedpad",3]]],[11,"new","imxrt_async_hal::iomuxc::pads::ad_b0","Take all pads from this group",24,[[],["pads",3]]],[11,"erase","","Erase all of the pads",24,[[]]],[11,"new","imxrt_async_hal::iomuxc::pads::ad_b1","Take all pads from this group",25,[[],["pads",3]]],[11,"erase","","Erase all of the pads",25,[[]]],[11,"new","imxrt_async_hal::iomuxc::pads::emc","Take all pads from this group",26,[[],["pads",3]]],[11,"erase","","Erase all of the pads",26,[[]]],[11,"new","imxrt_async_hal::iomuxc::pads::b0","Take all pads from this group",27,[[],["pads",3]]],[11,"erase","","Erase all of the pads",27,[[]]],[11,"new","imxrt_async_hal::iomuxc::pads::b1","Take all pads from this group",28,[[],["pads",3]]],[11,"erase","","Erase all of the pads",28,[[]]],[11,"new","imxrt_async_hal::iomuxc::pads::sd_b0","Take all pads from this group",29,[[],["pads",3]]],[11,"erase","","Erase all of the pads",29,[[]]],[11,"new","imxrt_async_hal::iomuxc::pads::sd_b1","Take all pads from this group",30,[[],["pads",3]]],[11,"erase","","Erase all of the pads",30,[[]]],[11,"new","imxrt_async_hal::iomuxc::pads","Take all of the pads",31,[[],["pads",3]]],[11,"erase","","Erase the types of all pads",31,[[],["erasedpads",3]]]],"p":[[4,"ClockGate"],[4,"BandwidthControl"],[3,"Sender"],[3,"Receiver"],[4,"Error"],[3,"GPIO"],[4,"Trigger"],[8,"Inst"],[3,"Instance"],[4,"DriveStrength"],[4,"Hysteresis"],[4,"OpenDrain"],[4,"PullKeep"],[4,"PullKeepSelect"],[4,"PullUpDown"],[4,"SlewRate"],[4,"Speed"],[8,"Unsigned"],[8,"Pin"],[8,"Pin"],[8,"Pin"],[8,"Pin"],[8,"Pin"],[3,"WrongPadError"],[3,"Pads"],[3,"Pads"],[3,"Pads"],[3,"Pads"],[3,"Pads"],[3,"Pads"],[3,"Pads"],[3,"Pads"],[3,"ErasedPads"],[4,"I2CClockSpeed"],[4,"I2CError"],[4,"SPIError"],[3,"SPIPins"],[4,"UARTError"],[3,"Channel"],[3,"ErrorStatus"],[4,"Input"],[4,"Output"],[3,"GPT"],[3,"I2C"],[3,"PIT"],[3,"SPI"],[3,"UART"],[3,"Config"],[4,"SCL"],[4,"SDA"],[4,"A"],[4,"B"],[4,"SCK"],[4,"SDO"],[4,"SDI"],[4,"PCS0"],[4,"TX"],[4,"RX"],[3,"Daisy"],[3,"ErasedPad"],[3,"Pad"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);